- move related methods from VulkanEngine to VkDevice class
- make VulkanEngine a better interface
- remove wrappers to method calls from objects managed by the VulkanEngine class
(ex: getWindowAspect ratio), instead pass references of these objects to those that require them

Start developing the editor:
- split the project using the core/app architecture
- have a game and an editor app
- transform the VulkanEngine class into an interface
- have a separate class implementing it for each app
- update the cmake project for multiple targets

- generalize skybox class
- add skyboxes in resource manager
- redo scene hierarchy in a more efficient way

- maybe find a better solution that stopping the app when minimized?
